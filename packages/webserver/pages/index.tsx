import type { NextPage } from "next";
import Head from "next/head";
import {
  Layout,
  Menu,
  Breadcrumb,
  Button,
  Form,
  Input,
  message,
  Row,
  Col,
  Avatar,
} from "antd";
import { UserOutlined } from '@ant-design/icons';
import styles from "../styles/Home.module.css";
import { trpc } from "../utils/trpc";

const { Header, Content, Footer, Sider } = Layout;

const Home: NextPage = () => {
  const utils = trpc.useContext();
  const login = trpc.auth.login.useMutation({
    async onSuccess(data) {
      if (data.status === "ok") {
        console.log("Login OK :", data.value.username);
        const tokenToStore = data.value.token;
      } else {
        console.log("Login Error :", data.error);
        message.error(data.error);
      }
    },
  });
  const handleLogin = (values: { username: string; password: string }) =>
    login.mutateAsync(values);
  const { data: users, isLoading } = trpc.auth.listUser.useQuery();

  return (
    <Layout className={styles.layout}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Sider collapsible className={styles.sider}>
        <div className={styles.logo} >Logo</div>
        <Menu theme="dark" defaultSelectedKeys={['1']} mode="inline">
        <Menu.Item key={"find"}>Find a slot</Menu.Item>
          <Menu.Item key={"my-slots"}>My slots</Menu.Item>
          <Menu.Item key={"login"} className={styles.login}>
            Login
          </Menu.Item>
          </Menu>
      </Sider>
      <Layout>

      <Header className={styles.header}>
      <Breadcrumb style={{ margin: "16px 0" }}>
          <Breadcrumb.Item>Home</Breadcrumb.Item>
          <Breadcrumb.Item>List</Breadcrumb.Item>
          <Breadcrumb.Item>App</Breadcrumb.Item>
        </Breadcrumb>
        <div><Avatar icon={<UserOutlined />} /> Login info</div>
      </Header>

      <Content className={styles.content}>
        
        <div className="site-layout-content">
          <Form name="login-form" onFinish={handleLogin}>
            <Form.Item label="Name" name="username">
              <Input />
            </Form.Item>
            <Form.Item label="Password" name="password">
              <Input type="password" />
            </Form.Item>
            <Form.Item>
              <Button htmlType="submit">Login</Button>
            </Form.Item>
          </Form>
          Content<Button type="primary">Button</Button>
          {users?.map((user) => (
            <Row key={user.name}>
              <Col>{user.name}</Col>
              <Col>{user.role}</Col>{" "}
            </Row>
          ))}
        </div>
      </Content>
      <Footer style={{ textAlign: "center" }}>
        Ant Design Â©2018 Created by Ant UED
      </Footer>
      </Layout>
    </Layout>
  );
};

export default Home;
